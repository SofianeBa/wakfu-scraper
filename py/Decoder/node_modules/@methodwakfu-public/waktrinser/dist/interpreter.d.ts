import { Token } from 'wink-tokenizer';
import LocaleSource from './models/LocaleSource';
import { Parameter } from './models/Parameter';
export default class Interpreter {
    private localeSource;
    constructor(localeSource: LocaleSource);
    /**
     * interpret condition from token
     * @param token
     */
    condition(token: Token): string;
    /**
     * interpret Ternary tag
     * @param {Tokenizer.Token} token
     * @param {number} targetParam
     * @returns {string}
     */
    ternary(token: Token, targetParam: number): string;
    /**
     * interpret paramater tag
     * @param {Tokenizer.Token} token
     * @param {boolean} shouldAddSpace
     * @returns {Parameter}
     */
    param(token: Token, shouldAddSpace: boolean): Parameter;
    /**
     * Interpret computation inside a localized token
     * @param {Tokenizer.Token} token
     * @returns {string}
     */
    computation(token: Token): string;
    /**
     * Calculate param
     * @param {number} targetParam
     * @param {boolean} precision
     * @returns {string}
     */
    private calcParam;
}
